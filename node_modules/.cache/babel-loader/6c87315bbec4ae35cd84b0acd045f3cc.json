{"ast":null,"code":"var _jsxFileName = \"/Users/karina/Main/Study/Web Dev/TEST/weather-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport WeatherAndForecast from \"./components/WeatherAndForecast\";\nimport Footer from \"./components/Footer\";\nimport Loader from \"./components/Loader\";\nimport Warning from \"./components/Warning\";\nimport getAddressOfCoordinates from \"./api/reverseGeocoding\";\nimport getCoordinatesOfAddress from \"./api/forwardGeocoding\";\nimport getWeatherAndForecast from \"./api/weatherAndForecast\";\nimport \"./styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [address, setAddress] = useState(\"\");\n  const [coordinates, setCoordinates] = useState({});\n  const [weatherAndForecastInfo, setWeatherAndForecastInfo] = useState({});\n  const [locationInfo, setLocationInfo] = useState({});\n  const [contentState, setContentState] = useState(\"blank\");\n\n  function searchCity(target) {\n    setAddress(target);\n  }\n\n  function showWarning() {\n    setContentState(\"warning\");\n    setTimeout(() => setContentState(\"blank\"), 3000);\n  }\n\n  useEffect(() => {\n    function makeRequest(position) {\n      setContentState(\"loading\");\n      getAddressOfCoordinates(position.coords.latitude, position.coords.longitude).then(res => {\n        setLocationInfo({\n          city: res.data.results[0].components.city_district,\n          town: res.data.results[0].components.town,\n          state: res.data.results[0].components.state_code,\n          country: res.data.results[0].components.country_code\n        });\n      }).then(() => setCoordinates({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      })).catch(error => showWarning());\n    }\n\n    function catchError(err) {\n      alert(\"ERROR(\" + err.code + \"): \" + err.message);\n    }\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(makeRequest, catchError);\n    } else {\n      alert(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n  useEffect(() => {\n    if (address === \"\") return;\n    setContentState(\"loading\");\n    getCoordinatesOfAddress(address).then(res => {\n      if (res.data.results.length === 0 || res.data.results[0].components.city === undefined && res.data.results[0].components.town === undefined) {\n        showWarning();\n        return;\n      }\n\n      setCoordinates(res.data.results[0].geometry);\n      setLocationInfo({\n        city: res.data.results[0].components.city,\n        town: res.data.results[0].components.town,\n        state: res.data.results[0].components.state_code,\n        country: res.data.results[0].components.country_code\n      });\n    }).catch(error => showWarning());\n  }, [address]);\n  useEffect(() => {\n    if (Object.keys(coordinates).length === 0) return;\n    getWeatherAndForecast(coordinates).then(res => {\n      setWeatherAndForecastInfo(res.data);\n      setContentState(\"weatherAndForecast\");\n    }).catch(error => showWarning());\n  }, [coordinates]);\n  const Main = {\n    blank: () => null,\n    loading: () => /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 20\n    }, this),\n    warning: () => /*#__PURE__*/_jsxDEV(Warning, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 20\n    }, this),\n    weatherAndForecast: () => /*#__PURE__*/_jsxDEV(WeatherAndForecast, {\n      weatherInfo: weatherAndForecastInfo,\n      location: locationInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App__container\",\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          searchCity: searchCity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), Main[contentState]()]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7Qmm00kSuolrNULfm90o4eq/AjI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/karina/Main/Study/Web Dev/TEST/weather-app/src/App.js"],"names":["React","useState","useEffect","Header","WeatherAndForecast","Footer","Loader","Warning","getAddressOfCoordinates","getCoordinatesOfAddress","getWeatherAndForecast","App","address","setAddress","coordinates","setCoordinates","weatherAndForecastInfo","setWeatherAndForecastInfo","locationInfo","setLocationInfo","contentState","setContentState","searchCity","target","showWarning","setTimeout","makeRequest","position","coords","latitude","longitude","then","res","city","data","results","components","city_district","town","state","state_code","country","country_code","lat","lng","catch","error","catchError","err","alert","code","message","navigator","geolocation","getCurrentPosition","length","undefined","geometry","Object","keys","Main","blank","loading","warning","weatherAndForecast"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Header from \"./components/Header\";\nimport WeatherAndForecast from \"./components/WeatherAndForecast\";\nimport Footer from \"./components/Footer\";\nimport Loader from \"./components/Loader\";\nimport Warning from \"./components/Warning\";\n\nimport getAddressOfCoordinates from \"./api/reverseGeocoding\";\nimport getCoordinatesOfAddress from \"./api/forwardGeocoding\";\nimport getWeatherAndForecast from \"./api/weatherAndForecast\";\n\nimport \"./styles/App.css\";\n\nfunction App() {\n  const [address, setAddress] = useState(\"\");\n  const [coordinates, setCoordinates] = useState({});\n  const [weatherAndForecastInfo, setWeatherAndForecastInfo] = useState({});\n  const [locationInfo, setLocationInfo] = useState({});\n  const [contentState, setContentState] = useState(\"blank\");\n\n  function searchCity(target) {\n    setAddress(target);\n  }\n\n  function showWarning() {\n    setContentState(\"warning\");\n    setTimeout(() => setContentState(\"blank\"), 3000);\n  }\n\n  useEffect(() => {\n    function makeRequest(position) {\n      setContentState(\"loading\");\n      getAddressOfCoordinates(\n        position.coords.latitude,\n        position.coords.longitude\n      )\n        .then((res) => {\n          setLocationInfo({\n            city: res.data.results[0].components.city_district,\n            town: res.data.results[0].components.town,\n            state: res.data.results[0].components.state_code,\n            country: res.data.results[0].components.country_code\n          });\n        })\n        .then(() =>\n          setCoordinates({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          })\n        )\n        .catch((error) => showWarning());\n    }\n\n    function catchError(err) {\n      alert(\"ERROR(\" + err.code + \"): \" + err.message);\n    }\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(makeRequest, catchError);\n    } else {\n      alert(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n\n  useEffect(() => {\n    if (address === \"\") return;\n\n    setContentState(\"loading\");\n    getCoordinatesOfAddress(address)\n      .then((res) => {\n        if (\n          res.data.results.length === 0 ||\n          (res.data.results[0].components.city === undefined &&\n            res.data.results[0].components.town === undefined)\n        ) {\n          showWarning();\n          return;\n        }\n\n        setCoordinates(res.data.results[0].geometry);\n        setLocationInfo({\n          city: res.data.results[0].components.city,\n          town: res.data.results[0].components.town,\n          state: res.data.results[0].components.state_code,\n          country: res.data.results[0].components.country_code\n        });\n      })\n      .catch((error) => showWarning());\n  }, [address]);\n\n  useEffect(() => {\n    if (Object.keys(coordinates).length === 0) return;\n\n    getWeatherAndForecast(coordinates)\n      .then((res) => {\n        setWeatherAndForecastInfo(res.data);\n        setContentState(\"weatherAndForecast\");\n      })\n      .catch((error) => showWarning());\n  }, [coordinates]);\n\n  const Main = {\n    blank: () => null,\n    loading: () => <Loader />,\n    warning: () => <Warning />,\n    weatherAndForecast: () => (\n      <WeatherAndForecast\n        weatherInfo={weatherAndForecastInfo}\n        location={locationInfo}\n      />\n    )\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__container\">\n        <>\n          <Header searchCity={searchCity} />\n          {Main[contentState]()}\n        </>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}